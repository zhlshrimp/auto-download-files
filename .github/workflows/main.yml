name: Download and Commit File

on:
  schedule:
    - cron: '0 6,12 * * *'  # 每小时运行一次（可修改）
  workflow_dispatch:     # 允许手动触发

jobs:
  download-and-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 拉取完整 Git 历史

      - name: Download File 1
        run: |
          mkdir -p files  # 确保目录存在
          wget "https://sub1.9426198.xyz/946946?b64" -O "files/b66-1.txt"
          # 或用 curl：
          # curl -o "files/file1-latest.zip" "https://example.com/file1.zip"

      - name: Download File 2
        run: |
          wget "https://sub.9426198.xyz/946946?b64" -O "files/b66.txt"
          # curl -o "files/file2-latest.csv" "https://example.com/file2.csv"

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Bot"
          git config --global user.email "bot@noreply.github.com"
          git add files/  # 添加所有 files/ 下的文件
          git commit -m "Update files: $(date +'%Y-%m-%d %H:%M:%S')"
          git push
          
# 步骤 3：发送 Telegram 通知
      - name: Notify Telegram
        run: |
          # 构造消息内容
          MESSAGE="✅ GitHub Actions 任务完成！\n\n"
          MESSAGE+="📂 文件已更新：\n"
          MESSAGE+="- [b66.txt](https://raw.githubusercontent.com/${{ github.repository }}/main/files/b66.txt)\n"
          MESSAGE+="- [b66-1.txt](https://raw.githubusercontent.com/${{ github.repository }}/main/files/b66-1.txt)\n\n"
          MESSAGE+="📅 时间: $(date +'%Y-%m-%d %H:%M:%S')"

          # 发送消息到 Telegram
          curl -s -X POST \
            "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d "text=$MESSAGE" \
            -d "parse_mode=Markdown" \
            -d "disable_web_page_preview=true"
